name: Package and Release Python App with Briefcase

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]  # Specify the OS matrix

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.10'  # Specify your Python version

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local
            dist/
            build/
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/setup.py') }}

      - name: Install Dependencies
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install briefcase build
          python -m pip install -r .github/requirements.txt

      - name: Build Package
        run: python -m build

      - name: Package the app with Briefcase
        run: briefcase package --adhoc-sign

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: packaged-app
          path: dist/  # Path to the packaged app folder (check Briefcase output folder)

  release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up tag
        id: tag
        run: |
          TAG_NAME="release-$(date +'%Y%m%d%H%M%S')"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      - name: Create new tag and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: packaged-app
          path: dist/

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          artifacts: "dist/*"